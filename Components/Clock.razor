<style>
    .clock {
        position: relative;        
        width: 150px;
        height: 150px;
        border-radius: 100%;
        border: 5px solid white;
        box-shadow: 0 0 10px 5px rgba(0, 0, 0, 0.5);
    }

    .centre {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translateX(-50%) translateY(-50%);
        background-color: #999;
        width: 8px;
        height: 8px;
        border-radius: 8px;
        border: 1px solid #000;
    }

    .hourHand,
    .minuteHand,
    .secondHand {
        transform-origin: left;
        position: absolute;
        left: 50%;
        top: 50%;
        rotate: -90deg;
        transform: translateX(-50%) translateY(-50%);
        width: 50px;
        height: 4px;
        border-radius: 4px;
        transition: all 10ms ease;
    }

    .hourHand {
        margin-top: -2px;
    }

    .minuteHand {
        width: 60px;
        margin-top: -1px;
        height: 2px;
    }

    .secondHand {
        background-color: red !important;
        width: 70px;
        height: 1px;
        background-color: red !important;
    }

    .light.clock {
        background-color: #ccc;
    }

    .light.hourHand,
    .light.minuteHand,
    .light.secondHand {
        background-color: #333;
    }

    .dark.clock {
        background-color: #333;
    }

    .dark.hourHand,
    .dark.minuteHand,
    .dark.secondHand {
        background-color: #ccc;
    }

    .currentDateTime {
        font-family: monospace;
        font-size: 14px;
        margin-top: 2em;
        text-align: center;
        width: 100%;
    }
</style>

<div style="display: flex; flex-direction: column; align-items: center; gap: 0; margin: 0; padding: 0">
    <div class="@ampm clock">
        <div class="centre"></div>
        <div class="@ampm hourHand" style="transform: rotate(@(hour)deg);"></div>
        <div class="@ampm minuteHand" style="transform: rotate(@(minute)deg);"></div>
        <div class="@ampm secondHand" style="transform: rotate(@(second)deg);"></div>
    </div>
    <p class="currentDateTime">
<<<<<<< HEAD
        <b>@CityName</b><br/>(@currentTime)
=======
        @CityName<br/>(@currentTime)
>>>>>>> e9bdf3b4aa48ed44b6e1551ddb11fc51adeadeb8
    </p>
</div>

@code
{
    Timer? timer;
    string? ampm;
    double hour, minute, second;
    string? currentTime;

    [Parameter] public int TimeZoneInMinutes { get; set; }
    [Parameter] public bool IsMechanical { get; set; }
    [Parameter] public string CityName { get; set; } = string.Empty;

    void UpdateTime(object? stateInfo)
    {
        var time = DateTime.UtcNow.AddMinutes(TimeZoneInMinutes);
        currentTime = time.ToString("h:mm tt");
<<<<<<< HEAD

        hour = 360 * time.Hour / 12 + 30 * time.Minute / 60.0;
        minute = 360 * time.Minute / 60 + 6.0 * time.Second / 60.0;
        second = 360 * time.Second / 60 + 6.0 * time.Millisecond / 1000.0;

=======
        hour = 360 * time.Hour / 12 + 30 * time.Minute / 60.0;
        minute = 360 * time.Minute / 60 + 6.0 * time.Second / 60.0;
        second = 360 * time.Second / 60 + 6.0 * time.Millisecond / 1000.0;
>>>>>>> e9bdf3b4aa48ed44b6e1551ddb11fc51adeadeb8
        ampm = (time.Hour >= 6 && time.Hour <= 17) ? "light" : "dark";
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        UpdateTime(null);
        int duration = IsMechanical ? 10 : 1000;
        timer = new Timer(UpdateTime, new AutoResetEvent(false), duration, duration);
    }
<<<<<<< HEAD
    
}
=======
}
>>>>>>> e9bdf3b4aa48ed44b6e1551ddb11fc51adeadeb8
